package ru.example.sic.my_ads.adapters;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.InputType;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;

import com.parse.ParseObject;

import java.util.ArrayList;

import ru.example.sic.my_ads.R;

import static ru.example.sic.my_ads.Constants.LANGUAGE;
import static ru.example.sic.my_ads.Parse.Constants.USER_CONTACTS_COUNTRY_CODE;
import static ru.example.sic.my_ads.Parse.Constants.USER_CONTACTS_OF_TYPE;
import static ru.example.sic.my_ads.Parse.Constants.USER_CONTACTS_VALUE;

public class ContactsEditAdapter extends RecyclerView.Adapter<ContactsEditAdapter.ViewHolder> {
    ArrayList<ParseObject> listParse;
    String[] countryEn = {"Aland Islands",
            "Albania",
            "Algeria",
            "American Samoa",
            "Andorra",
            "Angola",
            "Anguilla",
            "Antigua and Barbuda",
            "Argentina",
            "Armenia",
            "Aruba",
            "Australia",
            "Austria",
            "Afghanistan",
            "Azerbaijan",
            "Bahamas",
            "Bahrain",
            "Bangladesh",
            "Barbados",
            "Belarus",
            "Belgium",
            "Belize",
            "Benin",
            "Bermuda",
            "Bhutan",
            "Bolivia",
            "Bonaire",
            "Bosnia and Herzegovina",
            "Botswana",
            "Brazil",
            "Brunei Darussalam",
            "Bulgaria",
            "Burkina Faso",
            "Burundi",
            "Cambodia",
            "Cameroon",
            "Canada",
            "Cape Verde",
            "Cayman Islands",
            "Central African Republic",
            "Chad",
            "Chile",
            "China",
            "Christmas Island",
            "Cocos (Keeling) Islands",
            "Colombia",
            "Comoros",
            "Congo",
            "Democratic Republic of the Congo",
            "Cook Islands",
            "Costa Rica",
            "Croatia",
            "Cuba",
            "Curacao",
            "Cyprus",
            "Czech Republic",
            "CÃ´te d'Ivoire",
            "Denmark",
            "Djibouti",
            "Dominica",
            "Dominican Republic",
            "Ecuador",
            "Egypt",
            "El Salvador",
            "Equatorial Guinea",
            "Eritrea",
            "Estonia",
            "Ethiopia",
            "Falkland Islands (Malvinas)",
            "Faroe Islands",
            "Fiji",
            "Finland",
            "France",
            "French Guiana",
            "French Polynesia",
            "Gabon",
            "Gambia",
            "Georgia",
            "Germany",
            "Ghana",
            "Gibraltar",
            "Greece",
            "Greenland",
            "Grenada",
            "Guadeloupe",
            "Guam",
            "Guatemala",
            "Guernsey",
            "Guinea",
            "Guinea-Bissau",
            "Guyana",
            "Haiti",
            "Holy See (Vatican City State)",
            "Honduras",
            "Hong Kong",
            "Hungary",
            "Iceland",
            "India",
            "Indonesia",
            "Iran",
            "Iraq",
            "Ireland",
            "Isle of Man",
            "Israel",
            "Italy",
            "Jamaica",
            "Japan",
            "Jersey",
            "Jordan",
            "Kazakhstan",
            "Kenya",
            "Kiribati",
            "Korea, North",
            "Korea, South",
            "Kuwait",
            "Kyrgyzstan",
            "Lao People's Democratic Republic",
            "Latvia",
            "Lebanon",
            "Lesotho",
            "Liberia",
            "Libya",
            "Liechtenstein",
            "Lithuania",
            "Luxembourg",
            "Macao",
            "Macedonia",
            "Madagascar",
            "Malawi",
            "Malaysia",
            "Maldives",
            "Mali",
            "Malta",
            "Marshall Islands",
            "Martinique",
            "Mauritania",
            "Mauritius",
            "Mayotte",
            "Mexico",
            "Micronesia",
            "Moldova",
            "Monaco",
            "Mongolia",
            "Montenegro",
            "Montserrat",
            "Morocco",
            "Mozambique",
            "Myanmar",
            "Namibia",
            "Nauru",
            "Nepal",
            "Netherlands",
            "New Caledonia",
            "New Zealand",
            "Nicaragua",
            "Niger",
            "Nigeria",
            "Niue",
            "Norfolk Island",
            "Northern Mariana Islands",
            "Norway",
            "Oman",
            "Pakistan",
            "Palau",
            "Palestine",
            "Panama",
            "Papua New Guinea",
            "Paraguay",
            "Peru",
            "Philippines",
            "Pitcairn",
            "Poland",
            "Portugal",
            "Puerto Rico",
            "Qatar",
            "Romania",
            "Russian Federation",
            "Rwanda",
            "Reunion",
            "Saint Barthelemy",
            "Saint Helena",
            "Saint Kitts and Nevis",
            "Saint Lucia",
            "Saint Martin (French part)",
            "Saint Pierre and Miquelon",
            "Saint Vincent and the Grenadines",
            "Samoa",
            "San Marino",
            "Sao Tome and Principe",
            "Saudi Arabia",
            "Senegal",
            "Serbia",
            "Seychelles",
            "Sierra Leone",
            "Singapore",
            "Sint Maarten (Dutch part)",
            "Slovakia",
            "Slovenia",
            "Solomon Islands",
            "Somalia",
            "South Africa",
            "South Georgia and the South Sandwich Islands",
            "South Sudan",
            "Spain",
            "Sri Lanka",
            "Sudan",
            "Suriname",
            "Svalbard and Jan Mayen",
            "Swaziland",
            "Sweden",
            "Switzerland",
            "Syrian Arab Republic",
            "Taiwan, Province of China",
            "Tajikistan",
            "United Republic of Tanzania",
            "Thailand",
            "Timor-Leste",
            "Togo",
            "Tokelau",
            "Tonga",
            "Trinidad and Tobago",
            "Tunisia",
            "Turkey",
            "Turkmenistan",
            "Turks and Caicos Islands",
            "Tuvalu",
            "Uganda",
            "Ukraine",
            "United Arab Emirates",
            "United Kingdom",
            "United States",
            "United States Minor Outlying Islands",
            "Uruguay",
            "Uzbekistan",
            "Vanuatu",
            "Venezuela",
            "Viet Nam",
            "British Virgin Islands",
            "US Virgin Islands",
            "Wallis and Futuna",
            "Western Sahara",
            "Yemen",
            "Zambia",
            "Zimbabwe"};
    String[] countryRu = {"Аландские острова",
            "Албания",
            "Алжир",
            "Самоа Американское",
            "Андорра",
            "Ангола",
            "Ангилья",
            "Антигуа и Барбуда",
            "Аргентина",
            "Армения",
            "Аруба",
            "Австралия",
            "Австрия",
            "Афганистан",
            "Азербайджан",
            "Багамские Острова",
            "Бахрейн",
            "Бангладеш",
            "Барбадос",
            "Белоруссия",
            "Бельгия",
            "Белиз",
            "Бенин",
            "Бермудские Острова",
            "Бутан",
            "Боливия",
            "Бонэйр",
            "Босния и Герцеговина",
            "Ботсвана",
            "Бразилия",
            "Бруней",
            "Болгария",
            "Буркина-Фасо",
            "Бурунди",
            "Камбоджа",
            "Камерун",
            "Канада",
            "Кабо-Верде",
            "Острова Кайман",
            "Центральноафриканская Республика",
            "Республика Чад",
            "Чили",
            "Китай",
            "Рождества остров",
            "Кокосовые острова",
            "Колумбия",
            "Коморские Острова",
            "Республика Конго",
            "Демократическая Республика Конго",
            "Кука острова",
            "Коста-Рика",
            "Хорватия",
            "Куба",
            "Кюрасао",
            "Кипр",
            "Чехия",
            "Кот-д’Ивуар",
            "Дания",
            "Джибути",
            "Доминика",
            "Доминиканская Республика",
            "Эквадор",
            "Египет",
            "Сальвадор",
            "Экваториальная Гвинея",
            "Эритрея",
            "Эстония",
            "Эфиопия",
            "Фолклендские острова",
            "Фареры",
            "Фиджи",
            "Финляндия",
            "Франция",
            "Гвиана",
            "Полинезия Французская",
            "Габон",
            "Гамбия",
            "Грузия",
            "Германия",
            "Гана",
            "Гибралтар",
            "Греция",
            "Гренландия",
            "Гренада",
            "Гваделупа",
            "Гуам",
            "Гватемала",
            "Гернси",
            "Гвинея",
            "Гвинея-Бисау",
            "Гайана",
            "Гаити",
            "Ватикан",
            "Гондурас",
            "Гонконг",
            "Венгрия",
            "Исландия",
            "Индия",
            "Индонезия",
            "Иран",
            "Ирак",
            "Ирландия",
            "Мэн",
            "Израиль",
            "Италия",
            "Ямайка",
            "Япония",
            "Джерси",
            "Иордания",
            "Казахстан",
            "Кения",
            "Кирибати",
            "Корейская Народно-Демократическая Республика",
            "Республика Корея",
            "Кувейт",
            "Киргизия",
            "Лаос",
            "Латвия",
            "Ливан",
            "Лесото",
            "Либерия",
            "Ливия",
            "Лихтенштейн",
            "Литва",
            "Люксембург",
            "Макао",
            "Македония",
            "Мадагаскар",
            "Малави",
            "Малайзия",
            "Мальдивы",
            "Мали",
            "Мальта",
            "Маршалловы Острова",
            "Мартиника",
            "Мавритания",
            "Маврикий",
            "Майотта",
            "Мексика",
            "Микронезия",
            "Молдавия",
            "Монако",
            "Монголия",
            "Черногория",
            "Монтсеррат",
            "Марокко",
            "Мозамбик",
            "Мьянма",
            "Намибия",
            "Науру",
            "Непал",
            "Нидерланды",
            "Новая Каледония",
            "Новая Зеландия",
            "Никарагуа",
            "Нигер",
            "Нигерия",
            "Ниуэ",
            "Норфолк остров",
            "Северные Марианские Острова",
            "Норвегия",
            "Оман",
            "Пакистан",
            "Палау",
            "Палестина",
            "Панама",
            "Папуа — Новая Гвинея",
            "Парагвай",
            "Перу",
            "Филиппины",
            "Питкэрн острова",
            "Польша",
            "Португалия",
            "Пуэрто-Рико",
            "Катар",
            "Румыния",
            "Россия",
            "Руанда",
            "Реюньон",
            "Сен-Бартелеми",
            "Святой Елены, Вознесения и Тристан-да-Кунья острова",
            "Сент-Китс и Невис",
            "Сент-Люсия",
            "Сен-Мартен",
            "Сен-Пьер и Микелон",
            "Сент-Винсент и Гренадины",
            "Самоа",
            "Сан-Марино",
            "Сан-Томе и Принсипи",
            "Саудовская Аравия",
            "Сенегал",
            "Сербия",
            "Сейшельские Острова",
            "Сьерра-Леоне",
            "Сингапур",
            "Синт-Мартен",
            "Словакия",
            "Словения",
            "Соломоновы Острова",
            "Сомали",
            "Южно-Африканская Республика",
            "Южная Осетия",
            "Южный Судан",
            "Испания",
            "Шри-Ланка",
            "Судан",
            "Суринам",
            "Шпицберген и Ян-Майен",
            "Свазиленд",
            "Швеция",
            "Швейцария",
            "Сирия",
            "Тайвань",
            "Таджикистан",
            "Танзания",
            "Таиланд",
            "Восточный Тимор",
            "Того",
            "Токелау",
            "Тонга",
            "Тринидад и Тобаго",
            "Тунис",
            "Турция",
            "Туркмения",
            "Тёркс и Кайкос",
            "Тувалу",
            "Уганда",
            "Украина",
            "Объединённые Арабские Эмираты",
            "Великобритания",
            "Соединённые Штаты Америки",
            "США Внешние малые острова",
            "Уругвай",
            "Узбекистан",
            "Вануату",
            "Венесуэла",
            "Вьетнам",
            "Виргинские Острова (Великобритания)",
            "Виргинские Острова (США)",
            "Уоллис и Футуна",
            "Сахарская Арабская Демократическая Республика",
            "Йемен",
            "Замбия",
            "Зимбабве"};
    String[] code = {
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AF",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "BN",
            "BG",
            "BF",
            "BI",
            "KH",
            "CM",
            "CA",
            "CV",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CD",
            "CK",
            "CR",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "CI",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KP",
            "KR",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RO",
            "RU",
            "RW",
            "RE",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SZ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UM",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"};
    String[] codeWithNumbers = {"AF,+93",
            "AL,+355",
            "AS,+1",
            "AD,+376",
            "AO,+244",
            "AI,+1",
            "AG,+1",
            "AR,+54",
            "AM,+374",
            "AW,+297",
            "AU,+61",
            "AT,+43",
            "AZ,+994",
            "AX,+35818",
            "BS,+1",
            "BH,+973",
            "BD,+880",
            "BB,+1",
            "BY,+375",
            "BQ,+5993",
            "BE,+32",
            "BZ,+501",
            "BJ,+229",
            "BM,+1",
            "BT,+975",
            "BA,+387",
            "BW,+267",
            "BR,+55",
            "IO,+246",
            "BG,+359",
            "BF,+226",
            "BI,+257",
            "KH,+855",
            "CM,+237",
            "CA,+1",
            "CV,+238",
            "CW,+5999",
            "KY,+345",
            "CF,+236",
            "TD,+235",
            "CL,+56",
            "CN,+86",
            "CX,+61",
            "CO,+57",
            "KM,+269",
            "CG,+242",
            "CK,+682",
            "CR,+506",
            "HR,+385",
            "CU,+53",
            "CY,+537",
            "CZ,+420",
            "DK,+45",
            "DJ,+253",
            "DM,+1",
            "DO,+1",
            "DZ,+213",
            "DE,+49",
            "EC,+593",
            "EG,+20",
            "EH,+212",
            "SV,+503",
            "GQ,+240",
            "ER,+291",
            "EE,+372",
            "ET,+251",
            "FO,+298",
            "FJ,+679",
            "FI,+358",
            "FR,+33",
            "GF,+594",
            "PF,+689",
            "GA,+241",
            "GM,+220",
            "GE,+995",
            "GH,+233",
            "GI,+350",
            "GR,+30",
            "GL,+299",
            "GD,+1",
            "GP,+590",
            "GU,+1",
            "GT,+502",
            "GN,+224",
            "GW,+245",
            "GY,+595",
            "HT,+509",
            "HN,+504",
            "HU,+36",
            "IS,+354",
            "IN,+91",
            "ID,+62",
            "IQ,+964",
            "IE,+353",
            "IL,+972",
            "IT,+39",
            "JM,+1",
            "JP,+81",
            "JO,+962",
            "KZ,+77",
            "KE,+254",
            "KI,+686",
            "KW,+965",
            "KG,+996",
            "LV,+371",
            "LB,+961",
            "LS,+266",
            "LR,+231",
            "LI,+423",
            "LT,+370",
            "LU,+352",
            "MG,+261",
            "MW,+265",
            "MY,+60",
            "MV,+960",
            "ML,+223",
            "MT,+356",
            "MH,+692",
            "MQ,+596",
            "MR,+222",
            "MU,+230",
            "MX,+52",
            "MC,+377",
            "MN,+976",
            "ME,+382",
            "MS,+1",
            "MA,+212",
            "MM,+95",
            "NA,+264",
            "NR,+674",
            "NP,+977",
            "NL,+31",
            "AN,+599",
            "NC,+687",
            "NZ,+64",
            "NI,+505",
            "NE,+227",
            "NG,+234",
            "NU,+683",
            "NF,+672",
            "MP,+1",
            "NO,+47",
            "OM,+968",
            "PK,+92",
            "PW,+680",
            "PA,+507",
            "PG,+675",
            "PY,+595",
            "PE,+51",
            "PH,+63",
            "PL,+48",
            "PT,+351",
            "PR,+1",
            "QA,+974",
            "RO,+40",
            "RW,+250",
            "SM,+378",
            "SA,+966",
            "SN,+221",
            "RS,+381",
            "SC,+248",
            "SL,+232",
            "SG,+65",
            "SS,+211",
            "SK,+421",
            "SI,+386",
            "SX,+599",
            "SB,+677",
            "GS,+500",
            "ES,+34",
            "LK,+94",
            "SD,+249",
            "SR,+597",
            "SZ,+268",
            "SE,+46",
            "CH,+41",
            "TJ,+992",
            "TH,+66",
            "TG,+228",
            "TK,+690",
            "TO,+676",
            "TT,+1",
            "TN,+216",
            "TR,+90",
            "TM,+993",
            "TC,+1",
            "TV,+688",
            "UG,+256",
            "UA,+380",
            "AE,+971",
            "GB,+44",
            "UK,+44",
            "US,+1",
            "UM,+1",
            "UY,+598",
            "UZ,+998",
            "BO,+591",
            "BN,+673",
            "CC,+61",
            "CD,+243",
            "CI,+225",
            "FK,+500",
            "GG,+44",
            "VA,+379",
            "HK,+852",
            "IR,+98",
            "IM,+44",
            "JE,+44",
            "KP,+850",
            "KR,+82",
            "LA,+856",
            "LY,+218",
            "MO,+853",
            "MK,+389",
            "FM,+691",
            "MD,+373",
            "MZ,+258",
            "PS,+970",
            "PN,+872",
            "RE,+262",
            "RU,+7",
            "BL,+590",
            "SH,+290",
            "KN,+1",
            "LC,+1",
            "MF,+590",
            "PM,+508",
            "VC,+1",
            "ST,+239",
            "SO,+252",
            "SJ,+47",
            "SY,+963",
            "TW,+886",
            "TZ,+255",
            "TL,+670",
            "VE,+58",
            "VN,+84",
            "VG,+284",
            "VI,+340",
            "VU,+678",
            "WF,+681",
            "WS,+685",
            "YE,+967",
            "YT,+262",
            "ZA,+27",
            "ZM,+260",
            "ZW,+263"};

    public ContactsEditAdapter(ArrayList<ParseObject> list) {
        this.listParse = list;
    }

    @Override
    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_contact_edit, parent, false);
        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(final ViewHolder holder, final int position) {
        holder.contactText.setText(listParse.get(position).getString(USER_CONTACTS_VALUE));
        switch (listParse.get(position).getInt(USER_CONTACTS_OF_TYPE)) {
            case 0:
                holder.contactType.setSelection(0);
                break;
            case 1:
                holder.contactType.setSelection(1);
                for (String item : codeWithNumbers) {
                    Integer codeInArray = Integer.decode(item.split(",")[1]);
                    Integer codeInParse = Integer.decode(listParse.get(position).getString(USER_CONTACTS_COUNTRY_CODE));
                    if (codeInArray.equals(codeInParse)) {
                        for (int i = 0; i < code.length; i++) {
                            if (code[i].contains(item.split(",")[0])) {
                                holder.countryCode.setSelection(i);
                                break;
                            }
                        }
                    }
                }
                break;
            case 2:
                holder.contactType.setSelection(2);
                break;
            case 3:
                holder.contactType.setSelection(3);
                break;
            case 4:
                holder.contactType.setSelection(4);
                break;
            case 5:
                holder.contactType.setSelection(5);
                break;
        }
        holder.countryCode.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                // final String[] codeNumbers = view.getResources().getStringArray(R.array.CountryCodes);
                for (String s : codeWithNumbers) {
                    if (s.contains(code[holder.countryCode.getSelectedItemPosition()])) {
                        listParse.get(position).put(USER_CONTACTS_COUNTRY_CODE, s.split(",")[1]);
                        break;
                    }
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {

            }
        });
        holder.contactText.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void afterTextChanged(Editable editable) {
                if (position < listParse.size()) {
                    listParse.get(position).put(USER_CONTACTS_VALUE, holder.contactText.getText().toString());
                }

            }
        });
        holder.contactType.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                listParse.get(position).put(USER_CONTACTS_OF_TYPE, i);
                holder.countryCode.setVisibility(View.GONE);
                holder.contactText.setInputType(InputType.TYPE_CLASS_TEXT);
                switch (i) {
                    case 1: {
                        holder.countryCode.setVisibility(View.VISIBLE);
                        holder.contactText.setInputType(InputType.TYPE_CLASS_PHONE);
                        holder.contactText.setHint(holder.mView.getResources().getString(R.string.enter_phone_hint));
                        break;
                    }
                    case 3: {
                        holder.contactText.setText("http://");
                        break;
                    }
                    case 4: {
                        holder.contactText.setText("http://" + holder.mView.getResources().getString(R.string.fb_add) + "/");
                        break;
                    }
                    case 5: {
                        holder.contactText.setText("http://" + holder.mView.getResources().getString(R.string.vk_add) + "/");
                        break;
                    }
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {

            }
        });
        holder.deleteContact.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                listParse.get(position).deleteInBackground();
                listParse.remove(position);
                notifyDataSetChanged();
            }
        });

    }

    @Override
    public int getItemCount() {
        return listParse.size();
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        public final View mView;
        public final TextView deleteContact;
        public final EditText contactText;
        public final Spinner countryCode;
        public final Spinner contactType;
        private ArrayAdapter<String> contactTypeAdapter;
        private ArrayAdapter<String> countryCodeAdapter;

        public ViewHolder(final View view) {
            super(view);
            mView = view;
            contactText = (EditText) view.findViewById(R.id.contact_text);
            deleteContact = (TextView) view.findViewById(R.id.delete_contact);
            countryCode = (Spinner) view.findViewById(R.id.country_code);
            contactType = (Spinner) view.findViewById(R.id.contact_type);
            contactTypeAdapter = new ArrayAdapter<>(view.getContext(),
                    android.R.layout.simple_spinner_dropdown_item,
                    view.getResources().getStringArray(R.array.contact_type));
            String[] country;
            if (LANGUAGE.equals("ru")) {
                country = countryRu;
            } else {
                country = countryEn;
            }
            countryCodeAdapter = new ArrayAdapter(view.getContext(), android.R.layout.simple_spinner_dropdown_item, country) {
                @Override
                public View getView(int position, View convertView, ViewGroup parent) {
                    LayoutInflater vi = (LayoutInflater) view.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                    final View v = vi.inflate(android.R.layout.simple_spinner_item, null);
                    final TextView t = (TextView) v.findViewById(android.R.id.text1);
                    for (String s : codeWithNumbers) {
                        if (s.contains(code[position])) {
                            t.setText(s.split(",")[1]);
                            break;
                        }
                    }
                    return v;
                }
            };
            countryCode.setAdapter(countryCodeAdapter);
            contactType.setAdapter(contactTypeAdapter);
        }

    }

}